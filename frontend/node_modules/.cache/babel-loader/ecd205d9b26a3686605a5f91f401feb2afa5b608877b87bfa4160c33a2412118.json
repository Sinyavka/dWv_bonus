{"ast":null,"code":"var _jsxFileName = \"/Users/arseny0304/Desktop/full_service/frontend/src/components/Charts.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, LineChart, Line, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Charts({\n  jobs\n}) {\n  const compCounts = {};\n  const locCounts = {};\n  const timeCounts = {};\n  jobs.forEach(job => {\n    compCounts[job.employer] = (compCounts[job.employer] || 0) + 1;\n    locCounts[job.area] = (locCounts[job.area] || 0) + 1;\n    const date = job.published_at.split('T')[0];\n    timeCounts[date] = (timeCounts[date] || 0) + 1;\n  });\n  const compData = Object.entries(compCounts).map(([name, count]) => ({\n    name,\n    count\n  })).sort((a, b) => b.count - a.count).slice(0, 10);\n  const locData = Object.entries(locCounts).map(([name, count]) => ({\n    name,\n    count\n  })).sort((a, b) => b.count - a.count).slice(0, 10);\n  const timeData = Object.entries(timeCounts).map(([date, count]) => ({\n    date,\n    count\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: compData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: locData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 81\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vacancies Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 600,\n      height: 300,\n      data: timeData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 133\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","LineChart","Line","CartesianGrid","jsxDEV","_jsxDEV","Charts","jobs","compCounts","locCounts","timeCounts","forEach","job","employer","area","date","published_at","split","compData","Object","entries","map","name","count","sort","a","b","slice","locData","timeData","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","dataKey","stroke","type","_c","$RefreshReg$"],"sources":["/Users/arseny0304/Desktop/full_service/frontend/src/components/Charts.jsx"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, LineChart, Line, CartesianGrid } from 'recharts';\n\nfunction Charts({ jobs }) {\n  const compCounts = {};\n  const locCounts = {};\n  const timeCounts = {};\n\n  jobs.forEach(job => {\n    compCounts[job.employer] = (compCounts[job.employer] || 0) + 1;\n    locCounts[job.area] = (locCounts[job.area] || 0) + 1;\n    const date = job.published_at.split('T')[0];\n    timeCounts[date] = (timeCounts[date] || 0) + 1;\n  });\n\n  const compData = Object.entries(compCounts).map(([name, count]) => ({ name, count })).sort((a, b) => b.count - a.count).slice(0, 10);\n  const locData = Object.entries(locCounts).map(([name, count]) => ({ name, count })).sort((a, b) => b.count - a.count).slice(0, 10);\n  const timeData = Object.entries(timeCounts).map(([date, count]) => ({ date, count })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return (\n    <div>\n      <h2>Top Companies</h2>\n      <BarChart width={600} height={300} data={compData}><XAxis dataKey=\"name\" /><YAxis /><Tooltip /><Bar dataKey=\"count\" /></BarChart>\n      <h2>Top Locations</h2>\n      <BarChart width={600} height={300} data={locData}><XAxis dataKey=\"name\" /><YAxis /><Tooltip /><Bar dataKey=\"count\" /></BarChart>\n      <h2>Vacancies Over Time</h2>\n      <LineChart width={600} height={300} data={timeData}><XAxis dataKey=\"date\" /><YAxis /><Tooltip /><CartesianGrid stroke=\"#ccc\"/><Line type=\"monotone\" dataKey=\"count\" /></LineChart>\n    </div>\n  );\n}\n\nexport default Charts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
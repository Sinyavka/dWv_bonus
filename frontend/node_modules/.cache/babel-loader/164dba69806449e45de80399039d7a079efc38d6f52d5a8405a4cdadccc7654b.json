{"ast":null,"code":"var _jsxFileName = \"/Users/arseny0304/Desktop/full_service/frontend/src/components/D3BarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n/**\n * Функция для переноса длинных подписей по словам.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction wrap(textSelection, width) {\n  textSelection.each(function () {\n    const text = d3.select(this);\n    const words = text.text().split(/\\s+/).reverse();\n    let word;\n    let line = [];\n    let lineNumber = 0;\n    const lineHeight = 1.1; // ems\n    const y = text.attr(\"y\");\n    const dy = parseFloat(text.attr(\"dy\")) || 0;\n    let tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n}\nexport default function D3BarChart({\n  data,\n  labelKey,\n  valueKey,\n  color\n}) {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!Array.isArray(data)) return;\n    const svg = d3.select(svgRef.current);\n    const width = 700;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 100,\n      left: 60\n    };\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n    svg.selectAll(\"*\").remove();\n    const x = d3.scaleBand().domain(data.map(d => d[labelKey])).range([margin.left, width - margin.right]).padding(0.2);\n    const y = d3.scaleLinear().domain([0, d3.max(data, d => d[valueKey])]).nice().range([height - margin.bottom, margin.top]);\n\n    // X-axis с переносом подписей\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-45)\").call(wrap, x.bandwidth());\n\n    // Y-axis\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft(y));\n\n    // Бары\n    svg.selectAll(\".bar\").data(data).join(\"rect\").attr(\"class\", \"bar\").attr(\"x\", d => x(d[labelKey])).attr(\"y\", d => y(d[valueKey])).attr(\"width\", x.bandwidth()).attr(\"height\", d => y(0) - y(d[valueKey])).attr(\"fill\", color || \"#ff69b4\");\n  }, [data, labelKey, valueKey, color]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    className: \"w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n_s(D3BarChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = D3BarChart;\nvar _c;\n$RefreshReg$(_c, \"D3BarChart\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","wrap","textSelection","width","each","text","select","words","split","reverse","word","line","lineNumber","lineHeight","y","attr","dy","parseFloat","tspan","append","pop","push","join","node","getComputedTextLength","D3BarChart","data","labelKey","valueKey","color","_s","svgRef","Array","isArray","svg","current","height","margin","top","right","bottom","left","selectAll","remove","x","scaleBand","domain","map","d","range","padding","scaleLinear","max","nice","call","axisBottom","bandwidth","axisLeft","ref","className","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arseny0304/Desktop/full_service/frontend/src/components/D3BarChart.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n/**\n * Функция для переноса длинных подписей по словам.\n */\nfunction wrap(textSelection, width) {\n  textSelection.each(function() {\n    const text = d3.select(this);\n    const words = text.text().split(/\\s+/).reverse();\n    let word;\n    let line = [];\n    let lineNumber = 0;\n    const lineHeight = 1.1; // ems\n    const y = text.attr(\"y\");\n    const dy = parseFloat(text.attr(\"dy\")) || 0;\n    let tspan = text.text(null)\n      .append(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y)\n      .attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", y)\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n          .text(word);\n      }\n    }\n  });\n}\n\nexport default function D3BarChart({ data, labelKey, valueKey, color }) {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!Array.isArray(data)) return;\n    const svg = d3.select(svgRef.current);\n    const width = 700;\n    const height = 400;\n    const margin = { top: 20, right: 20, bottom: 100, left: 60 };\n\n    svg.attr(\"viewBox\", `0 0 ${width} ${height}`);\n    svg.selectAll(\"*\").remove();\n\n    const x = d3.scaleBand()\n      .domain(data.map(d => d[labelKey]))\n      .range([margin.left, width - margin.right])\n      .padding(0.2);\n\n    const y = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d[valueKey])]).nice()\n      .range([height - margin.bottom, margin.top]);\n\n    // X-axis с переносом подписей\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .selectAll(\"text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", \"rotate(-45)\")\n        .call(wrap, x.bandwidth());\n\n    // Y-axis\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y));\n\n    // Бары\n    svg.selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", d => x(d[labelKey]))\n        .attr(\"y\", d => y(d[valueKey]))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", d => y(0) - y(d[valueKey]))\n        .attr(\"fill\", color || \"#ff69b4\");\n  }, [data, labelKey, valueKey, color]);\n\n  return <svg ref={svgRef} className=\"w-full\" />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
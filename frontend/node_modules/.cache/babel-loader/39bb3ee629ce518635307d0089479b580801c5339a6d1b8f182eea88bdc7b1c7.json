{"ast":null,"code":"var _jsxFileName = \"/Users/arseny0304/Desktop/full_service/frontend/src/pages/CompaniesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FilterBar from '../components/FilterBar';\nimport D3BarChart from '../components/D3BarChart';\nimport { fetchJobs } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompaniesPage() {\n  _s();\n  const [filters, setFilters] = useState({\n    date_from: '',\n    date_to: '',\n    employer: '',\n    skill: ''\n  });\n  const [skillsOptions, setSkillsOptions] = useState([]);\n  const [data, setData] = useState([]);\n\n  // Загружаем список топ-скиллов для селекта\n  useEffect(() => {\n    fetch('http://localhost:8000/api/skills').then(r => r.json()).then(setSkillsOptions).catch(console.error);\n  }, []);\n\n  // Перезагружаем вакансии при смене фильтров\n  useEffect(() => {\n    fetchJobs(filters).then(jobs => {\n      const counts = {};\n      jobs.forEach(j => {\n        const name = j.employer || 'Unknown';\n        counts[name] = (counts[name] || 0) + 1;\n      });\n      const arr = Object.entries(counts).map(([name, count]) => ({\n        name,\n        count\n      })).sort((a, b) => b.count - a.count).slice(0, 10);\n      setData(arr);\n    }).catch(console.error);\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      onChange: setFilters,\n      skillsOptions: skillsOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '1.75rem',\n        marginBottom: '16px'\n      },\n      children: \"\\u0422\\u043E\\u043F \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0439 \\u043F\\u043E \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0443 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(D3BarChart, {\n      data: data,\n      labelKey: \"name\",\n      valueKey: \"count\",\n      color: \"#ff69b4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CompaniesPage, \"nqL2/Fb6SBLb3Ler47z5FaSipOc=\");\n_c = CompaniesPage;\nvar _c;\n$RefreshReg$(_c, \"CompaniesPage\");","map":{"version":3,"names":["React","useEffect","useState","FilterBar","D3BarChart","fetchJobs","jsxDEV","_jsxDEV","CompaniesPage","_s","filters","setFilters","date_from","date_to","employer","skill","skillsOptions","setSkillsOptions","data","setData","fetch","then","r","json","catch","console","error","jobs","counts","forEach","j","name","arr","Object","entries","map","count","sort","a","b","slice","style","padding","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","labelKey","valueKey","color","_c","$RefreshReg$"],"sources":["/Users/arseny0304/Desktop/full_service/frontend/src/pages/CompaniesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FilterBar from '../components/FilterBar';\nimport D3BarChart from '../components/D3BarChart';\nimport { fetchJobs } from '../api';\n\nexport default function CompaniesPage() {\n  const [filters, setFilters] = useState({\n    date_from: '', date_to: '', employer: '', skill: ''\n  });\n  const [skillsOptions, setSkillsOptions] = useState([]);\n  const [data, setData] = useState([]);\n\n  // Загружаем список топ-скиллов для селекта\n  useEffect(() => {\n    fetch('http://localhost:8000/api/skills')\n      .then(r => r.json())\n      .then(setSkillsOptions)\n      .catch(console.error);\n  }, []);\n\n  // Перезагружаем вакансии при смене фильтров\n  useEffect(() => {\n    fetchJobs(filters)\n      .then(jobs => {\n        const counts = {};\n        jobs.forEach(j => {\n          const name = j.employer || 'Unknown';\n          counts[name] = (counts[name] || 0) + 1;\n        });\n        const arr = Object.entries(counts)\n          .map(([name, count]) => ({ name, count }))\n          .sort((a, b) => b.count - a.count)\n          .slice(0, 10);\n        setData(arr);\n      })\n      .catch(console.error);\n  }, [filters]);\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <FilterBar\n        filters={filters}\n        onChange={setFilters}\n        skillsOptions={skillsOptions}\n      />\n      <h2 style={{ fontSize: '1.75rem', marginBottom: '16px' }}>\n        Топ компаний по количеству вакансий\n      </h2>\n      <D3BarChart data={data} labelKey=\"name\" valueKey=\"count\" color=\"#ff69b4\" />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}